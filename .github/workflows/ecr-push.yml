name: Build & Push to ECR

on:
  push:
    branches: [main, master]
    paths:
      - Dockerfile
      - requirements.txt
      - "**/*.py"
      - ".github/workflows/ecr-push.yml"
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        required: true
        default: "dev"
        type: choice
        options: [dev, prod]

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Use 'dev' as default when pushing to main, or chosen env for manual runs
    environment: ${{ inputs.env || 'dev' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute tags
        id: meta
        run: |
          # Use 'dev' as default environment
          ENV="${{ inputs.env || 'dev' }}"
          TS="$(date -u +%Y%m%d-%H%M%S)"
          SHA="${GITHUB_SHA::7}"
          echo "TAG1=${ENV}-${TS}-${SHA}" >> $GITHUB_OUTPUT
          echo "TAG2=${ENV}-latest" >> $GITHUB_OUTPUT

      - name: Build & push to ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.meta.outputs.TAG1 }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.meta.outputs.TAG2 }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:buildcache,mode=max

      - name: Show image URIs
        run: |
          echo "Pushed:"
          echo "${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.meta.outputs.TAG1 }}"
          echo "${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.meta.outputs.TAG2 }}"