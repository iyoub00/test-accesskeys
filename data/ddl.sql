------------------------------
-- Database Destruction
------------------------------
DROP SCHEMA IF EXISTS recruiter CASCADE;
DROP SCHEMA IF EXISTS candidate CASCADE;
DROP TYPE IF EXISTS EDUCATION;
DROP TYPE IF EXISTS SENIORITY;
DROP TYPE IF EXISTS ARRANGEMENT;
DROP TYPE IF EXISTS STATUS;

------------------------------
-- Database Creation
------------------------------
-- create database silicon_talent_acquisition_app;

------------------------------
-- Schema Creation
------------------------------
CREATE SCHEMA IF NOT EXISTS recruiter;
CREATE SCHEMA IF NOT EXISTS candidate;

------------------------------
-- Metadata
------------------------------
CREATE TYPE EDUCATION AS ENUM ('NONE','BACCALAUREATE','ASSOCIATE','BACHELOR','MASTER','DOCTORAL/MBA');
CREATE TYPE SENIORITY AS ENUM ('INTERN','ASSOCIATE','MIDLEVEL','SENIOR','EXECUTIVE');
CREATE TYPE ARRANGEMENT AS ENUM ('ONSITE','REMOTE','HYBRID');
CREATE TYPE STATUS AS ENUM ('PENDING','SCORED');

------------------------------
-- Schema : Recruiter
------------------------------
CREATE TABLE IF NOT EXISTS recruiter.organizations(
    id int4 primary key generated by default as identity,
    name text,
    slug text,
    phone text,
    email text,
    website text
);

-- todo : recruiter role

-- todo invite colleagues interface / no registration form
CREATE TABLE IF NOT EXISTS recruiter.recruiters(
    id int8 primary key generated by default as identity,
    first_name text,
    last_name text,
    email text,
    password text,
    organization_id int4,
    CONSTRAINT fk_users_organizations
        FOREIGN KEY(organization_id)
        REFERENCES recruiter.organizations
        ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS recruiter.collections(
    id int8 primary key generated by default as identity,
    label text,
    slug text,
    description text,
    is_archived int2,
    organization_id int4,
    CONSTRAINT fk_collections_organizations
        FOREIGN KEY(organization_id)
            REFERENCES recruiter.organizations
            ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS recruiter.offers(
    id int8 primary key generated by default as identity,
    title text,
    slug text,
    location text,
    description text,
    responsibilities jsonb,
    skills jsonb,
    certifications jsonb,
    education EDUCATION,
    seniority SENIORITY,
    arrangement ARRANGEMENT,
    creation_date int8,
    expiry_date int8,
    closing_date int8,
    is_archived int2,
    collection_id int8,
    -- todo add salary range
    CONSTRAINT fk_offers_collections
        FOREIGN KEY(collection_id)
            REFERENCES recruiter.collections
            ON DELETE SET NULL
);

-- TODO : new iteration for job templates

-- ===============================================================================================================
-- ===============================================================================================================
-- ===============================================================================================================

------------------------------
-- Schema : Candidate
------------------------------
CREATE TABLE IF NOT EXISTS candidate.candidates(
    id int8 primary key generated by default as identity,
    title text,
    education EDUCATION,
    seniority SENIORITY,
    arrangement ARRANGEMENT,
    -- todo add salary expectations
    first_name text,
    last_name text,
    email text,
    password text,
    is_active int2,
    is_valid int2,
    registration_date int8,
    last_login int8
);

CREATE TABLE IF NOT EXISTS candidate.affiliation(
    candidate_id int8,
    offer_id int4,
    token text,
    creation_date int8,
    expiration_date int8,
    activation_date int8,
    CONSTRAINT fk_affiliations_candidates
        FOREIGN KEY(candidate_id)
            REFERENCES candidate.candidates
            ON DELETE SET NULL,
    CONSTRAINT fk_affiliations_offers
        FOREIGN KEY(offer_id)
            REFERENCES recruiter.offers
            ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS candidate.applications(
    id int8 primary key generated by default as identity,
    cv_url text,
    application_date int8,
    status STATUS,
    score_experience decimal(23,20),
    score_skills decimal(23,20),
    report_url text,
    offer_id int8,
    candidate_id int8,
    CONSTRAINT fk_applications_offers
        FOREIGN KEY(offer_id)
            REFERENCES recruiter.offers
            ON DELETE SET NULL,
    CONSTRAINT fk_applications_candidates
        FOREIGN KEY(candidate_id)
            REFERENCES candidate.candidates
            ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS candidate.interviews(
    id int8 primary key generated by default as identity,
    token text,
    score_behavior decimal(23,20),
    score_practical decimal(23,20),
    interview_date int8,
    expiration_date int8,
    is_taken int2,
    offer_id int8,
    candidate_id int8,
    CONSTRAINT fk_interviews_offers
        FOREIGN KEY(offer_id)
            REFERENCES recruiter.offers
            ON DELETE SET NULL,
    CONSTRAINT fk_interviews_candidates
        FOREIGN KEY(candidate_id)
            REFERENCES candidate.candidates
            ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS candidate.hirings(
    offer_id int8,
    candidate_id int8,
    offer_meta jsonb,
    candidate_meta jsonb
);

-- todo : produce event as json

-- TODO : new iteration for job templates


CREATE TABLE IF NOT EXISTS candidate.cvs(
    id int8 primary key generated by default as identity,
    url text,
    candidate_id int8,
    CONSTRAINT fk_cvs_candidates
        FOREIGN KEY(candidate_id)
            REFERENCES candidate.candidates
            ON DELETE SET NULL
);